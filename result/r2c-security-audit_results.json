{
    "results": [
        {
            "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
            "path": "test/test_program.py",
            "start": {
                "line": 17,
                "col": 57,
                "offset": 550
            },
            "end": {
                "line": 17,
                "col": 61,
                "offset": 554
            },
            "extra": {
                "metavars": {
                    "$FUNC": {
                        "start": {
                            "line": 17,
                            "col": 20,
                            "offset": 513
                        },
                        "end": {
                            "line": 17,
                            "col": 23,
                            "offset": 516
                        },
                        "abstract_content": "run"
                    },
                    "$TRUE": {
                        "start": {
                            "line": 17,
                            "col": 57,
                            "offset": 550
                        },
                        "end": {
                            "line": 17,
                            "col": 61,
                            "offset": 554
                        },
                        "abstract_content": "True"
                    }
                },
                "message": "Found 'subprocess' function 'run' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
                "fix": "False",
                "metadata": {
                    "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "references": [
                        "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                        "https://docs.python.org/3/library/subprocess.html"
                    ],
                    "category": "security",
                    "technology": [
                        "python"
                    ],
                    "cwe2022-top25": true,
                    "cwe2021-top25": true,
                    "subcategory": [
                        "secure default"
                    ],
                    "likelihood": "HIGH",
                    "impact": "LOW",
                    "confidence": "MEDIUM",
                    "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
                    "vulnerability_class": [
                        "Command Injection"
                    ],
                    "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                    "shortlink": "https://sg.run/J92w",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9646,
                            "rule_id": "DbUpz2",
                            "rv_id": 946382,
                            "url": "https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "version_id": "YDTvReW"
                        }
                    }
                },
                "severity": "ERROR",
                "fingerprint": "66aeba5a9b2f41334118619f21beaf43362279ea1bd42ed206a163bbeaf57168ea78c6f295dbf31703dfe1f53231f4023210040deabd6cfbfbf27bbd58dcaf95_0",
                "lines": "        subprocess.run(f\"ping -c 1 {user_input}\", shell=True, check=True)",
                "is_ignored": false,
                "validation_state": "NO_VALIDATOR",
                "engine_kind": "OSS"
            }
        },
        {
            "check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
            "path": "test/sample.py",
            "start": {
                "line": 4,
                "col": 32,
                "offset": 72
            },
            "end": {
                "line": 4,
                "col": 36,
                "offset": 76
            },
            "extra": {
                "metavars": {
                    "$FUNC": {
                        "start": {
                            "line": 4,
                            "col": 16,
                            "offset": 56
                        },
                        "end": {
                            "line": 4,
                            "col": 20,
                            "offset": 60
                        },
                        "abstract_content": "call"
                    },
                    "$TRUE": {
                        "start": {
                            "line": 4,
                            "col": 32,
                            "offset": 72
                        },
                        "end": {
                            "line": 4,
                            "col": 36,
                            "offset": 76
                        },
                        "abstract_content": "True"
                    }
                },
                "message": "Found 'subprocess' function 'call' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.",
                "fix": "False",
                "metadata": {
                    "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html",
                    "owasp": [
                        "A01:2017 - Injection",
                        "A03:2021 - Injection"
                    ],
                    "cwe": [
                        "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                    ],
                    "references": [
                        "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
                        "https://docs.python.org/3/library/subprocess.html"
                    ],
                    "category": "security",
                    "technology": [
                        "python"
                    ],
                    "cwe2022-top25": true,
                    "cwe2021-top25": true,
                    "subcategory": [
                        "secure default"
                    ],
                    "likelihood": "HIGH",
                    "impact": "LOW",
                    "confidence": "MEDIUM",
                    "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
                    "vulnerability_class": [
                        "Command Injection"
                    ],
                    "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                    "shortlink": "https://sg.run/J92w",
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9646,
                            "rule_id": "DbUpz2",
                            "rv_id": 946382,
                            "url": "https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true",
                            "version_id": "YDTvReW"
                        }
                    }
                },
                "severity": "ERROR",
                "fingerprint": "1d4e62a5f1e3d8dc60047367438311f92594c85c73004bef41b4cb3213d338d838d607ab0b6c4d8d8b9f3686e50218cc214268586e658dacc1a3f081318e834f_0",
                "lines": "    subprocess.call(cmd, shell=True) # CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                "is_ignored": false,
                "validation_state": "NO_VALIDATOR",
                "engine_kind": "OSS"
            }
        }
    ],
    "errors": [],
    "paths": {
        "_comment": "Aggregated scan report for directory 'test'"
    },
    "version": "1.131.0",
    "time": {
        "rules": [],
        "rules_parse_time": 0.5312860012054443,
        "profiling_times": {
            "config_time": 1.7667768001556396,
            "core_time": 1.779749870300293,
            "ignores_time": 0.0007834434509277344,
            "total_time": 3.5491037368774414
        },
        "parsing_time": {
            "total_time": 0.017221927642822266,
            "per_file_time": {
                "mean": 0.017221927642822266,
                "std_dev": 0.0
            },
            "very_slow_stats": {
                "time_ratio": 0.0,
                "count_ratio": 0.0
            },
            "very_slow_files": []
        },
        "scanning_time": {
            "total_time": 0.03782391548156738,
            "per_file_time": {
                "mean": 0.01891195774078369,
                "std_dev": 0.00032692505591569443
            },
            "very_slow_stats": {
                "time_ratio": 0.0,
                "count_ratio": 0.0
            },
            "very_slow_files": []
        },
        "matching_time": {
            "total_time": 0.0074231624603271484,
            "per_file_and_rule_time": {
                "mean": 0.0012371937433878581,
                "std_dev": 4.6176426056692635e-06
            },
            "very_slow_stats": {
                "time_ratio": 0.0,
                "count_ratio": 0.0
            },
            "very_slow_rules_on_files": []
        },
        "tainting_time": {
            "total_time": 0.0025320053100585938,
            "per_def_and_rule_time": {
                "mean": 0.0012660026550292969,
                "std_dev": 8.592760423198342e-07
            },
            "very_slow_stats": {
                "time_ratio": 0.0,
                "count_ratio": 0.0
            },
            "very_slow_rules_on_defs": []
        },
        "targets": [],
        "total_bytes": 0,
        "max_memory_bytes": 264063424
    },
    "engine_requested": "OSS",
    "interfile_languages_used": [],
    "skipped_rules": []
}