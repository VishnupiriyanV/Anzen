{
  "version": "1.132.1",
  "results": [
    {
      "check_id": "typescript.react.security.react-insecure-request.react-insecure-request",
      "path": "clonedf\\Signup.jsx",
      "start": {
        "line": 24,
        "col": 32,
        "offset": 909
      },
      "end": {
        "line": 29,
        "col": 9,
        "offset": 1171
      },
      "extra": {
        "message": "Unencrypted request over HTTP detected.",
        "metadata": {
          "vulnerability": "Insecure Transport",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "cwe": [
            "CWE-319: Cleartext Transmission of Sensitive Information"
          ],
          "references": [
            "https://www.npmjs.com/package/axios"
          ],
          "category": "security",
          "technology": [
            "react"
          ],
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Mishandled Sensitive Information"
          ],
          "source": "https://semgrep.dev/r/typescript.react.security.react-insecure-request.react-insecure-request",
          "shortlink": "https://sg.run/1n0b"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.injection.subprocess-injection.subprocess-injection",
      "path": "clonedf\\app.py",
      "start": {
        "line": 405,
        "col": 13,
        "offset": 17143
      },
      "end": {
        "line": 410,
        "col": 14,
        "offset": 17371
      },
      "extra": {
        "message": "Detected user input entering a `subprocess` call unsafely. This could result in a command injection vulnerability. An attacker could use this vulnerability to execute arbitrary commands on the host, which allows them to download malware, scan sensitive data, or run any command they wish on the server. Do not let users choose the command to run. In general, prefer to use Python API versions of system commands. If you must use subprocess, use a dictionary to allowlist a set of commands.",
        "metadata": {
          "category": "security",
          "technology": [
            "flask"
          ],
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "references": [
            "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
          ],
          "confidence": "HIGH",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Command Injection"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.injection.subprocess-injection.subprocess-injection",
          "shortlink": "https://sg.run/5gW3"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
      "path": "clonedf\\app.py",
      "start": {
        "line": 406,
        "col": 17,
        "offset": 17176
      },
      "end": {
        "line": 406,
        "col": 102,
        "offset": 17261
      },
      "extra": {
        "message": "Detected subprocess function 'run' with user controlled data. A malicious actor could leverage this to perform command injection. You may consider using 'shlex.escape()'.",
        "metadata": {
          "owasp": [
            "A01:2017 - Injection",
            "A03:2021 - Injection"
          ],
          "cwe": [
            "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
          ],
          "asvs": {
            "control_id": "5.3.8 OS Command Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess",
            "https://docs.python.org/3/library/subprocess.html",
            "https://docs.python.org/3/library/shlex.html",
            "https://semgrep.dev/docs/cheat-sheets/python-command-injection/"
          ],
          "category": "security",
          "technology": [
            "python"
          ],
          "confidence": "MEDIUM",
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "MEDIUM",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Command Injection"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.dangerous-subprocess-use.dangerous-subprocess-use",
          "shortlink": "https://sg.run/NWxp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.flask.security.audit.debug-enabled.debug-enabled",
      "path": "clonedf\\app.py",
      "start": {
        "line": 693,
        "col": 5,
        "offset": 32591
      },
      "end": {
        "line": 693,
        "col": 53,
        "offset": 32639
      },
      "extra": {
        "message": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled as it will leak sensitive information. Instead, consider using Flask configuration variables or setting 'debug' using system environment variables.",
        "metadata": {
          "cwe": [
            "CWE-489: Active Debug Code"
          ],
          "owasp": "A06:2017 - Security Misconfiguration",
          "references": [
            "https://labs.detectify.com/2015/10/02/how-patreon-got-hacked-publicly-exposed-werkzeug-debugger/"
          ],
          "category": "security",
          "technology": [
            "flask"
          ],
          "subcategory": [
            "vuln"
          ],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Active Debug Code"
          ],
          "source": "https://semgrep.dev/r/python.flask.security.audit.debug-enabled.debug-enabled",
          "shortlink": "https://sg.run/dKrd"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
      "path": "clonedf\\setup_demo.py",
      "start": {
        "line": 209,
        "col": 5,
        "offset": 6461
      },
      "end": {
        "line": 209,
        "col": 40,
        "offset": 6496
      },
      "extra": {
        "message": "These permissions `0o755` are widely permissive and grant access to more people than may be necessary. A good default is `0o644` which gives read and write access to yourself and read access to everyone else.",
        "metadata": {
          "category": "security",
          "owasp": [
            "A01:2021 - Broken Access Control"
          ],
          "cwe": [
            "CWE-276: Incorrect Default Permissions"
          ],
          "technology": [
            "python"
          ],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Improper Authorization"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
          "shortlink": "https://sg.run/AXY4"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
      "path": "clonedf\\setup_demo.py",
      "start": {
        "line": 220,
        "col": 5,
        "offset": 6735
      },
      "end": {
        "line": 220,
        "col": 41,
        "offset": 6771
      },
      "extra": {
        "message": "These permissions `0o755` are widely permissive and grant access to more people than may be necessary. A good default is `0o644` which gives read and write access to yourself and read access to everyone else.",
        "metadata": {
          "category": "security",
          "owasp": [
            "A01:2021 - Broken Access Control"
          ],
          "cwe": [
            "CWE-276: Incorrect Default Permissions"
          ],
          "technology": [
            "python"
          ],
          "references": [
            "https://owasp.org/Top10/A01_2021-Broken_Access_Control"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "vuln"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Improper Authorization"
          ],
          "source": "https://semgrep.dev/r/python.lang.security.audit.insecure-file-permissions.insecure-file-permissions",
          "shortlink": "https://sg.run/AXY4"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-telegram-bot-api-key.detected-telegram-bot-api-key",
      "path": "clonedf\\tel-main.py",
      "start": {
        "line": 12,
        "col": 23,
        "offset": 247
      },
      "end": {
        "line": 12,
        "col": 69,
        "offset": 293
      },
      "extra": {
        "message": "Telegram Bot API Key detected",
        "metadata": {
          "cwe": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "source-rule-url": "https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json",
          "category": "security",
          "technology": [
            "secrets",
            "telegram"
          ],
          "confidence": "LOW",
          "owasp": [
            "A07:2021 - Identification and Authentication Failures"
          ],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": [
            "audit"
          ],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": [
            "Hard-coded Secrets"
          ],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-telegram-bot-api-key.detected-telegram-bot-api-key",
          "shortlink": "https://sg.run/nd4b"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    }
  ],
  "errors": [],
  "paths": {
    "scanned": [
      "clonedf\\_metadata.json",
      "clonedf\\AddRepository.jsx",
      "clonedf\\ai-main.py",
      "clonedf\\App.jsx",
      "clonedf\\app.py",
      "clonedf\\Dashboard.jsx",
      "clonedf\\eslint.config.js",
      "clonedf\\extension.js",
      "clonedf\\jsconfig.json",
      "clonedf\\Login.jsx",
      "clonedf\\Logo.jsx",
      "clonedf\\main-git.py",
      "clonedf\\main.jsx",
      "clonedf\\manifest.json",
      "clonedf\\Navbar.jsx",
      "clonedf\\package-lock.json",
      "clonedf\\package.json",
      "clonedf\\package_1.json",
      "clonedf\\package_2.json",
      "clonedf\\postcss.config.js",
      "clonedf\\RepositoryDetail.jsx",
      "clonedf\\score_gen.py",
      "clonedf\\semgrep_results.json",
      "clonedf\\semgrep_results_analyzed.json",
      "clonedf\\setup_demo.py",
      "clonedf\\Signup.jsx",
      "clonedf\\tailwind.config.js",
      "clonedf\\tel-main.py",
      "clonedf\\ThemeContext.jsx",
      "clonedf\\vite-env.d.ts",
      "clonedf\\vite.config.js",
      "clonedf\\VSCodeLogo.jsx"
    ]
  },
  "time": {
    "rules": [],
    "rules_parse_time": 2.094974994659424,
    "profiling_times": {
      "config_time": 1.365875244140625,
      "core_time": 6.398305892944336,
      "ignores_time": 0.0014286041259765625,
      "total_time": 7.766396999359131
    },
    "parsing_time": {
      "total_time": 0.27684974670410156,
      "per_file_time": {
        "mean": 0.008651554584503174,
        "std_dev": 0.00020791928209717978
      },
      "very_slow_stats": {
        "time_ratio": 0.0,
        "count_ratio": 0.0
      },
      "very_slow_files": []
    },
    "scanning_time": {
      "total_time": 3.2074944972991943,
      "per_file_time": {
        "mean": 0.033411401013533286,
        "std_dev": 0.029157234676163494
      },
      "very_slow_stats": {
        "time_ratio": 0.5025774895160685,
        "count_ratio": 0.010416666666666666
      },
      "very_slow_files": [
        {
          "fpath": "clonedf\\app.py",
          "ftime": 1.6120145320892334
        }
      ]
    },
    "matching_time": {
      "total_time": 1.6289072036743164,
      "per_file_and_rule_time": {
        "mean": 0.00699101804152067,
        "std_dev": 0.0010907497248188588
      },
      "very_slow_stats": {
        "time_ratio": 0.4121297714973891,
        "count_ratio": 0.008583690987124463
      },
      "very_slow_rules_on_files": [
        {
          "fpath": "clonedf\\app.py",
          "rule_id": "python.aws-lambda.security.tainted-html-string.tainted-html-string",
          "time": 0.24905705451965332
        },
        {
          "fpath": "clonedf\\app.py",
          "rule_id": "python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http",
          "time": 0.42226409912109375
        }
      ]
    },
    "tainting_time": {
      "total_time": 0.6354043483734131,
      "per_def_and_rule_time": {
        "mean": 0.0017456163416852007,
        "std_dev": 6.163656504279835e-05
      },
      "very_slow_stats": {
        "time_ratio": 0.19746469054013033,
        "count_ratio": 0.0027472527472527475
      },
      "very_slow_rules_on_defs": [
        {
          "fpath": "clonedf\\app.py",
          "fline": 309,
          "rule_id": "python.boto3.security.hardcoded-token.hardcoded-token",
          "time": 0.12546992301940918
        }
      ]
    },
    "fixpoint_timeouts": [],
    "targets": [],
    "total_bytes": 0,
    "max_memory_bytes": 1100707200
  },
  "engine_requested": "OSS",
  "skipped_rules": []
}